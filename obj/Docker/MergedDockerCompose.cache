name: dockercompose9264206706973344245
services:
  sigma-web-sqlserver:
    command:
      - sh
      - -c
      - ' chmod +x /scripts/init.sh; /scripts/init.sh & /opt/mssql/bin/sqlservr;'
    environment:
      ACCEPT_EULA: "1"
      MSSQL_SA_PASSWORD: Password123
    image: mcr.microsoft.com/azure-sql-edge
    networks:
      sigma-web-network:
        aliases:
          - sigma-web-sqlserver
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sigma-web-mssql-azure-edge
        target: /var/opt/mssql
        volume: {}
      - type: bind
        source: C:\Users\GeovaneRoque\Documents\Github\SigmaWeb\SQL-Scripts
        target: /scripts
        bind:
          create_host_path: true
  sigmaweb:
    build:
      context: C:\Users\GeovaneRoque\Documents\Github\SigmaWeb
      dockerfile: SigmaWeb/Dockerfile
    container_name: sigma-web
    depends_on:
      sigma-web-sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: sigmaweb
    networks:
      sigma-web-network: null
    ports:
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\GeovaneRoque\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\GeovaneRoque\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  sigma-web-network:
    name: dockercompose9264206706973344245_sigma-web-network
    driver: bridge
volumes:
  sigma-web-mssql-azure-edge:
    name: dockercompose9264206706973344245_sigma-web-mssql-azure-edge